(()=>{"use strict";const e=(()=>{let e=[];return{addToList:function(t){e.push(t),console.log(e)},TodoList:e}})(),t=(e,t,n)=>({title:e,taskList:t,id:n}),n=(()=>{let n=[],o=e.TodoList;const r=t("General",o,0);return n.push(r),{submitProject:function(){document.querySelector("#createProject").addEventListener("click",(e=>{(function(){const e=document.querySelector("#projectTitle").value,o=0===n.length?0:n[n.length-1].id+1,c=t(e,[],o);console.log(c),function(e){n.push(e),console.log(n)}(c)})(),c.displayProject(),e.preventDefault()}))},grabProjectId:function(e){return e.target.getAttribute("data-projectId")},projectList:n}})(),o=function(){let e=n.projectList[0].taskList,t=e[e.length-1];const o=document.querySelector("#general"),c=document.createElement("div");c.setAttribute("data-taskId",`${t.id}`);const r=document.createElement("div"),d=document.createElement("div"),i=document.createElement("div"),u=document.createElement("div");return r.textContent=`Title: ${t.title}`,d.textContent=`Due Date: ${t.duedate}`,i.textContent=`Description: ${t.description}`,u.textContent=`Priority: ${t.priority}`,c.append(r,d,i,u),o.appendChild(c),o},c={displayProject:function(){let e=n.projectList,t=e[e.length-1];const o=document.querySelector("#Allprojects"),c=document.createElement("div"),r=document.createElement("div"),d=document.createElement("button");return c.classList.add("project"),c.setAttribute("data-projectId",`${t.id}`),d.setAttribute("data-projectId",`${t.id}`),d.setAttribute("id",`project-${t.id}`),r.textContent=`${t.title}`,d.textContent="+",d.addEventListener("click",(e=>{console.log(n.grabProjectId(e))})),c.append(r,d),o.appendChild(c),o}},r=(()=>{function t(){let t=document.getElementById("title").value,n=document.getElementById("description").value,o=document.getElementById("date").value,c=document.getElementById("priority").value;const r=((e,t,n,o,c,r)=>({id:e,title:t,description:n,duedate:o,priority:c,project:0}))(function(){let t=e.TodoList;return 0===t.length?0:t[t.length-1].id+1}(),t,n,o,c);console.log(r),e.addToList(r)}function n(){document.getElementById("title").value="",document.getElementById("description").value="",document.getElementById("date").value="",document.getElementById("priority").value="Low"}return{createNewTask:t,initSubmitBtn:function(){document.querySelector("#submit").addEventListener("click",(e=>{!function(){const e=document.querySelector("form"),c=document.querySelector("#newTask");t(),o(),n(),e.setAttribute("hidden",""),c.removeAttribute("hidden")}(),e.preventDefault()}))},cancelTask:function(){const e=document.querySelector("#cancel"),t=document.querySelector("form"),o=document.querySelector("#newTask");e.addEventListener("click",(e=>{n(),t.setAttribute("hidden",""),o.removeAttribute("hidden"),e.preventDefault()}))},openTaskCreator:function(){const e=document.querySelector("#newTask"),t=document.querySelector("form");e.addEventListener("click",(n=>{t.removeAttribute("hidden"),e.setAttribute("hidden",""),n.preventDefault()}))}}})();r.initSubmitBtn(),r.cancelTask(),r.openTaskCreator(),n.submitProject()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,