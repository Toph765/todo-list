(()=>{"use strict";const e=(()=>{let e=[];return{addToList:function(t){e.push(t),console.log(e)},TodoList:e}})(),t=(e,t,n)=>({title:e,taskList:t,id:n}),n=(()=>{let n,o=[],c=e.TodoList;const i=t("General",c,0);o.push(i);let d=0;return{submitProject:function(){document.querySelector("#createProject").addEventListener("click",(e=>{e.preventDefault(),function(){n=document.querySelector("#projectTitle").value;const e=0===o.length?0:o[o.length-1].id+1;if(""!==n){const r=t(n,[],e);console.log(r),function(e){o.push(e),console.log(o)}(r)}}(),""!==n&&(r.displayProject(),document.querySelector("#projectTitle").value="",n="")}))},grabProjectId:function(e){let t=parseInt(e.target.getAttribute("data-projectId"));return d=t,d},grabCurrentProject:function(){return d},grabProjectList:function(){return o},projectList:o}})(),o=function(){let e=n.projectList[0].taskList,t=e[e.length-1];const o=document.querySelector("#general"),r=document.createElement("div");r.setAttribute("data-taskId",`${t.id}`);const c=document.createElement("div"),i=document.createElement("div"),d=document.createElement("div"),u=document.createElement("div");return c.textContent=`Title: ${t.title}`,i.textContent=`Due Date: ${t.duedate}`,d.textContent=`Description: ${t.description}`,u.textContent=`Priority: ${t.priority}`,r.append(c,i,d,u),o.appendChild(r),o},r={displayProject:function(){let e=n.projectList,t=e[e.length-1];const o=document.querySelector("#Allprojects"),r=document.createElement("div"),c=document.createElement("div"),i=document.createElement("button");return r.classList.add("project"),r.setAttribute("data-projectId",`${t.id}`),i.setAttribute("data-projectId",`${t.id}`),i.setAttribute("id",`project-${t.id}`),c.textContent=`${t.title}`,i.textContent="+",i.addEventListener("click",(e=>{console.log("project id",n.grabProjectId(e));const t=document.querySelector("#main-form");n.grabProjectId(e),t.removeAttribute("hidden"),e.preventDefault()})),r.append(c,i),o.appendChild(r),o}},c=(()=>{let t,r;function c(){const o=n.grabProjectList();t=document.getElementById("title").value,r=document.getElementById("description").value;let c=document.getElementById("date").value,i=document.getElementById("priority").value,d=function(){let t=e.TodoList;return 0===t.length?0:t[t.length-1].id+1}(),u=n.grabCurrentProject();if(""!==t&&""!==r&&""!==c){const n=((e,t,n,o,r,c)=>({id:e,title:t,description:n,duedate:o,priority:r,project:c}))(d,t,r,c,i,u);console.log(n),0===u&&(o[0].taskList.push(n),console.log(o));for(let t=1;t<o.length;t++)o[t].id===u&&(e.addToList(n),o[t].taskList.push(n),console.log(o))}}function i(){document.getElementById("title").value="",t="",document.getElementById("description").value="",r="",document.getElementById("date").value="",document.getElementById("priority").value="Low"}return{createNewTask:c,initSubmitBtn:function(){document.querySelector("#submit").addEventListener("click",(e=>{!function(){const e=document.querySelector("#main-form"),n=document.querySelector("#newTask");c(),""!==t&&""!==r&&(o(),i(),e.setAttribute("hidden",""),n.removeAttribute("hidden"))}(),e.preventDefault()}))},cancelTask:function(){const e=document.querySelector("#cancel"),t=document.querySelector("#main-form"),n=document.querySelector("#newTask");e.addEventListener("click",(e=>{i(),t.setAttribute("hidden",""),n.removeAttribute("hidden"),e.preventDefault()}))},openTaskCreator:function(){const e=document.querySelector("#newTask"),t=document.querySelector("#main-form");e.addEventListener("click",(o=>{n.grabProjectId(o),t.removeAttribute("hidden"),e.setAttribute("hidden",""),o.preventDefault()}))}}})();c.initSubmitBtn(),c.cancelTask(),c.openTaskCreator(),n.submitProject()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,