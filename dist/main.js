(()=>{"use strict";const e=(()=>{let e=[];return{addToList:function(t){e.push(t),console.log(e)},TodoList:e}})(),t=(e,t,n)=>({title:e,taskList:t,id:n}),n=(()=>{let n=[],o=e.TodoList;const d=t("General",o,0);return n.push(d),{submitProject:function(){document.querySelector("#createProject").addEventListener("click",(e=>{(function(){const e=document.querySelector("#projectTitle").value,o=0===n.length?0:n[n.length-1].id+1,c=t(e,[],o);console.log(c),function(e){n.push(e),console.log(n)}(c)})(),c.displayProject(),e.preventDefault()}))},projectList:n}})(),o=function(){let t=e.TodoList,n=t[t.length-1];const o=document.querySelector("#general"),c=document.createElement("div");c.setAttribute("data-taskId",`${n.id}`);const d=document.createElement("div"),r=document.createElement("div"),i=document.createElement("div"),u=document.createElement("div");return d.textContent=`Title: ${n.title}`,r.textContent=`Due Date: ${n.duedate}`,i.textContent=`Description: ${n.description}`,u.textContent=`Priority: ${n.priority}`,c.append(d,r,i,u),o.appendChild(c),o},c={displayProject:function(){let e=n.projectList,t=e[e.length-1];const o=document.querySelector("#projects"),c=document.createElement("div"),d=document.createElement("div"),r=document.createElement("button");return c.setAttribute("data-projectId",`${t.id}`),r.setAttribute("data-projectId",`${t.id}`),r.classList.add("projectTask"),d.textContent=`${t.title}`,r.textContent="+",c.append(d,r),o.appendChild(c),o}},d=(()=>{function t(){let t=document.getElementById("title").value,n=document.getElementById("description").value,o=document.getElementById("date").value,c=document.getElementById("priority").value;const d=((e,t,n,o,c,d)=>({id:e,title:t,description:n,duedate:o,priority:c,project:"placeholder"}))(function(){let t=e.TodoList;return 0===t.length?0:t[t.length-1].id+1}(),t,n,o,c);console.log(d),e.addToList(d)}function n(){document.getElementById("title").value="",document.getElementById("description").value="",document.getElementById("date").value="",document.getElementById("priority").value="Low"}return{createNewTask:t,initSubmitBtn:function(){document.querySelector("#submit").addEventListener("click",(e=>{!function(){const e=document.querySelector("form"),c=document.querySelector("#newTask");t(),o(),n(),e.setAttribute("hidden",""),c.removeAttribute("hidden")}(),e.preventDefault()}))},cancelTask:function(){const e=document.querySelector("#cancel"),t=document.querySelector("form"),o=document.querySelector("#newTask");e.addEventListener("click",(e=>{n(),t.setAttribute("hidden",""),o.removeAttribute("hidden"),e.preventDefault()}))},openTaskCreator:function(){const e=document.querySelector("#newTask"),t=document.querySelector("form");e.addEventListener("click",(n=>{t.removeAttribute("hidden"),e.setAttribute("hidden",""),n.preventDefault()}))}}})();d.initSubmitBtn(),d.cancelTask(),d.openTaskCreator(),n.submitProject()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,